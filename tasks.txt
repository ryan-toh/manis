Who does what (5 people, 5 branches)
Person A — Project setup + CLI POH WEI HAO
Branch name: feat/setup-and-cli


Goal: make the repo run, add the basic sanitize.py command.


Files: src/cli/sanitize.py, README.md, basic tests.


Person B — Read CSV (+ sampling) JUSTIN LEE TZE WEN
Branch name: feat/read-csv


Goal: read input.csv, optional --sample to limit rows.


Files: src/pipeline/ingest.py, tiny test.


Person C — Regex PII detectors CHUA QI HENG
Branch name: feat/regex-pii


Goal: detect emails, phones, credit cards, IPs using regex.


Files: src/detect/regex.py, tests with a few fake examples.


Person D — Redaction OR FU XIANG
Branch name: feat/redact


Goal: replace detected stuff with [REDACTED], keep columns the same.


Files: src/transform/redact.py, test that counts replacements.


Person E — Names via NER (+ optional Streamlit UI if time)
Branch name: feat/ner-names TOH JUN YEEN RYAN


Goal: use spaCy or a HF model to find names/orgs/locations in text columns.


Files: src/detect/ner.py, tiny test.


Stretch (only if time): Streamlit app on a new branch feat/ui.


File Structure
src/
  cli/sanitize.py         # Person A
  pipeline/ingest.py      # Person B
  detect/regex.py         # Person C
  detect/ner.py           # Person E
  transform/redact.py     # Person D
tests/                    # tiny tests for each piece
app/streamlit_app.py      # (optional) Person E later

What each feature should do (minimum)
A (setup/CLI)
    sanitize input.csv output.csv
    Wires together: read → detect → redact → save
    Adds README with “how to run” steps

B (read-csv)
    read_csv(path) and optional sample_rows(n)
    Handles “file not found” nicely
C (regex-pii)
    Functions like find_emails, find_phones, find_credit_cards, find_ips
    Return positions or matched strings for redaction
D (redact)

    apply_redactions(df, matches, token='[REDACTED]')
    Keep same columns, same number of rows
    Count how many replacements (for a tiny report)
E (ner-names)
    find_ner_pii(text) that returns PERSON/ORG/LOCATION spans
    Works only if a “text” column exists (skip otherwise)
